import RPi.GPIO as GPIO
import time

# Set up GPIO pins for the ultrasonic sensor and the motor driver module
GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)
GPIO_TRIGGER = 18
GPIO_ECHO = 24
GPIO_IN1 = 17
GPIO_IN2 = 27
GPIO_ENA = 25
GPIO.setup(GPIO_TRIGGER, GPIO.OUT)
GPIO.setup(GPIO_ECHO, GPIO.IN)
GPIO.setup(GPIO_IN1, GPIO.OUT)
GPIO.setup(GPIO_IN2, GPIO.OUT)
GPIO.setup(GPIO_ENA, GPIO.OUT)
pwm = GPIO.PWM(GPIO_ENA, 100)
pwm.start(0)

# Define a function to measure the distance from the ultrasonic sensor
def distance():
    # Send a pulse to the trigger pin
    GPIO.output(GPIO_TRIGGER, True)
    time.sleep(0.00001)
    GPIO.output(GPIO_TRIGGER, False)

    # Measure the time it takes for the echo to return
    start_time = time.time()
    stop_time = time.time()
    while GPIO.input(GPIO_ECHO) == 0:
        start_time = time.time()
    while GPIO.input(GPIO_ECHO) == 1:
        stop_time = time.time()

    # Calculate the distance based on the time and speed of sound
    elapsed_time = stop_time - start_time
    distance_cm = (elapsed_time * 34300) / 2
    return distance_cm

# Define a function to control the motor driver module
def motor_control(left_speed, right_speed, left_dir, right_dir):
    GPIO.output(GPIO_IN1, left_dir)
    GPIO.output(GPIO_IN2, not left_dir)
    pwm.ChangeDutyCycle(left_speed)
    GPIO.output(GPIO_IN3, right_dir)
    GPIO.output(GPIO_IN4, not right_dir)
    pwm.ChangeDutyCycle(right_speed)

# Main loop to follow the wall
while True:
    # Measure the distance from the ultrasonic sensor
    dist = distance()

    # Adjust the motor speed and direction based on the distance
    if dist > 20:
        motor_control(30, 30, 1, 1)
    elif dist < 10:
        motor_control(30, 30, 0, 0)
    else:
        motor_control(20, 30, 1, 0)

    # Wait for a short period before taking another reading
    time.sleep(0.1)
